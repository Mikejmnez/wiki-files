<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="en">
  <siteinfo>
    <sitename>OPeNDAP Documentation</sitename>
    <dbname>wikidb</dbname>
    <base>https://docs.opendap.org/index.php/Home</base>
    <generator>MediaWiki 1.38.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OPeNDAP Documentation</namespace>
      <namespace key="5" case="first-letter">OPeNDAP Documentation talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DAP4: Subsetting Arrays and Grids By Value</title>
    <ns>0</ns>
    <id>809</id>
    <revision>
      <id>8079</id>
      <parentid>8078</parentid>
      <timestamp>2012-04-30T18:09:03Z</timestamp>
      <contributor>
        <username>Ndp</username>
        <id>2</id>
      </contributor>
      <comment>/* Proposed solution */</comment>
      <origin>8079</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4985" sha1="409gqstg6tqlxmw9iry5dbht4hj4q8t" xml:space="preserve">[[Development#OPULS_Development | &lt;-- back to OPULS Development]]

[[User:Ndp|ndp]]

== Background ==
DAP2 did not support sub-setting of Arrays and Grids using relational operators. Many of our support questions over the years have been from frustrated users who were attempting to perform relational sub-setting on these objects and couldn't understand why it wasn't working.


== Problem addressed ==
Allow users to subset Arrays (and "Grids") using relational operators.

== Proposed solution ==

Allow users to apply relational constraints to the values of Arrays (and "Grids"). The server should return a Sequence  which holds the matching Array values, along with the values of all of the associated Maps. 

For example, let's consider this data object:

&lt;font size="2"&gt;&lt;source lang="xml"&gt;
&lt;Dimension name="x" size="1024"/&gt;
&lt;Dimension name="y" size="1024"/&gt;
&lt;Dimension name="z" size="1000"/&gt;

&lt;!-- The dimensions of a Coordinate MUST be SharedDimensions --&gt;
&lt;Float32 name="lon"&gt;
    &lt;dimension ref="x"/&gt;
    &lt;dimension ref="y"/&gt;
&lt;/Map&gt;

&lt;Float32 name="lat"&gt;
    &lt;dimension ref="x"/&gt;
    &lt;dimension ref="y"/&gt;
&lt;/Map&gt;

&lt;Float32 name="depth"&gt;
    &lt;Attribute name="unit" type="String"&gt;&lt;value&gt;meters&lt;/value&gt;&lt;/Attribute&gt;
    &lt;dimension ref="x"/&gt;
    &lt;dimension ref="y"/&gt;
    &lt;dimension ref="z"/&gt;
&lt;/Map&gt;

&lt;Float64 name="sal"&gt;
    &lt;dimension ref="x"/&gt;
    &lt;dimension ref="y"/&gt;
    &lt;dimension ref="z"/&gt;
    &lt;map name="lat" /&gt;
    &lt;map name="lon" /&gt;
    &lt;map name="depth" /&gt;
&lt;/Float64&gt;
&lt;/source&gt;&lt;/font&gt;

Applying the constraint "&lt;font size=2&gt;&lt;code&gt;?sal&lt;3.2&lt;/code&gt;&lt;/font&gt;" would return this:

&lt;font size="2"&gt;&lt;source lang="xml"&gt;
&lt;Sequence name="sal"&gt;
    &lt;Float64 name="sal" /&gt;
    &lt;Float32 name="lat"/&gt;
    &lt;Float32 name="lon"/&gt;
    &lt;Float32 name="depth"/&gt;
&lt;/Sequence&gt;
&lt;/source&gt;&lt;/font&gt;

And the evaluation might look something like this (pseudo-code) for a returned sequence:

&lt;font size="2"&gt;&lt;source lang="java"&gt;
for(int x=0; x&lt;1024 ; x++){
    for(int y=0; y&lt;1024 ; y++){
        for(int z=0; z&lt;1000 ; z++){
            if(sal[x][y][z] &lt; 3.2){
                match_sal   = sal[x][y][z];
                match_lat   = lat[x][y];
                match_lon   = lon[x][y];
                match_depth = depth[x][y][z];
                send_sequence_row(match_sal, match_lat, match_lon, match_depth);
            }
        }
    }
}
&lt;/source&gt;&lt;/font&gt;

Or the evaluation might look something like this (pseudo-code) for a returned mask:

&lt;font size="2"&gt;&lt;source lang="java"&gt;

int xsize = 1024;
int ysize = 1024;
int zsize = 1000;

Mask sal_mask = new Mask(x,y,z);
sal_mask.setAll(false);

for(int x=0; x&lt;1024 ; x++){
    for(int y=0; y&lt;1024 ; y++){
        for(int z=0; z&lt;1000 ; z++){
            if(sal[x][y][z] &lt; 3.2){
                match_sal   = sal[x][y][z];
                sal_mask.set(x,y,z,true);
            }
        }
    }
}

sal_mask.serialize();

&lt;/source&gt;&lt;/font&gt;

== Rationale for the solution ==

Subsetting arrays and "grids" using relational expressions is unlikely to yield a set of matching items that can still be viewed as the same object in the data model. By representing the result as a Sequence we are able to return a reasonable representation of the result of the applied constraint using another representation found in the data model. 

== Discussion ==
[[User:dmh|Dennis]](4/28/2012) I like this proposal. It avoids the problem of using variable length dimensions and provides an additional use for sequences.

[[User:dmh|Dennis]](4/29/2012) I might suggest that the produced sequence should contain columns for the dimensions of the selected variable. Using the above example, I would suggest the new sequence should look like this.
&lt;font size="2"&gt;&lt;source lang="xml"&gt;
&lt;Sequence name="sal"&gt;
    &lt;Float64 name="sal" /&gt;
    &lt;Int32 name="x" /&gt;
    &lt;Int32 name="y" /&gt;
    &lt;Int32 name="z" /&gt;
    &lt;Float32 name="lat"/&gt;
    &lt;Float32 name="lon"/&gt;
    &lt;Float32 name="depth"/&gt;
&lt;/Sequence&gt;
&lt;/source&gt;&lt;/font&gt;

[[User:dmh|Dennis]](4/28/2012) &lt;del&gt;I am not sure, however that I see the algorithm for choosing the values for the map columns. Nathan, can you elaborate on the rule for doing that?&lt;/del&gt; Never mind; this issues requires some detailed discussion.

[[User:dmh|Dennis]](4/28/2012) slightly off topic. I thought we had agreed that map variables are just declared using ordinary variable declarations. The example above is using the element keyword to define coordinate variables. E.g.
&lt;pre&gt;
&lt;Map name="lon" type="Float32"&gt;
    &lt;dimension ref="x"/&gt;
    &lt;dimension ref="y"/&gt;
&lt;/Map&gt;
&lt;/pre&gt;
should instead be:
&lt;pre&gt;
&lt;Float32 name="lon"&gt;
    &lt;dimension ref="x"/&gt;
    &lt;dimension ref="y"/&gt;
&lt;/Float32&gt;
&lt;/pre&gt;
[[User:Ndp|ndp]] That's probably the case - I was just doing a copy-pasta from somewhere else on the wiki for the example. And I'm sure that somewhere hasn't been brought into line with our current discussion. I suspect that once we iron out an agreement on the various bits of the data model we'll need to go back and rework the wiki content to reflect our thinking.</text>
      <sha1>409gqstg6tqlxmw9iry5dbht4hj4q8t</sha1>
    </revision>
  </page>
</mediawiki>
