<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="en">
  <siteinfo>
    <sitename>OPeNDAP Documentation</sitename>
    <dbname>wikidb</dbname>
    <base>https://docs.opendap.org/index.php/Home</base>
    <generator>MediaWiki 1.38.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OPeNDAP Documentation</namespace>
      <namespace key="5" case="first-letter">OPeNDAP Documentation talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Aliases</title>
    <ns>0</ns>
    <id>313</id>
    <revision>
      <id>2247</id>
      <parentid>2246</parentid>
      <timestamp>2008-06-24T22:38:10Z</timestamp>
      <contributor>
        <username>Jimg</username>
        <id>3</id>
      </contributor>
      <origin>2247</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4966" sha1="pnjdg2tet5m11i61zqsn7lrzfbxjz7u" xml:space="preserve">As this discussion moves forward I see two issues here: Alias syntax and Alias scope. Where Alias syntax is how we write them down, and Alias scope is what they can (or cannot) point to.&lt;br&gt;

'''Before we can nail down the syntax we need to decide the scope.'''

----

I think being able to alias variables and attributes so values can have multiple names is important. When we (Nathan and I) combined the attributes with the variables in the DDX object we found that it was hard to use the simple dot notation to specify names because an Attribute and Variable might have the same name.

I propose the following rules for Alias source naming:

# An alias source (and from now on I'll just say 'source') uses dots (.) to separate components of a variable when those have more than one part.
# An alias source uses colons (:) to separate components of a attribute when those have more than one part.
# A source must be absolute. The source may either beign with the name of the dataset or, as a shorthand for that, it may begin with a dot. (Once we have these rules sorted out we can look at supporting relative sources.)
# Aliases for variables and attributes cannot be mixed. That is an alias that creates a new name in the 'variable space' cannot have an attribute as its source.

Here are some example DDXs (written using the old notation) and some examples of Aliases:

&lt;pre&gt;
&lt;Dataset name="testdata"&gt;
    &lt;Attribute name="stuff" type="String"&gt; &lt;!-- #1 --&gt;
        &lt;value&gt;Stuff about this stuff&lt;/value&gt;
        &lt;value&gt;Silly&lt;/value&gt;
    &lt;/Attribute&gt;
    &lt;Attribute name="cruise" type="Alias"&gt; 
        &lt;value&gt;testdata:stuff&lt;/value&gt;      &lt;!-- cruise has the type and value of #1 --&gt;
    &lt;/Attribute&gt;
&lt;/Dataset&gt;
&lt;/pre&gt;

&lt;pre&gt;
&lt;Dataset name="testdata"&gt;
    &lt;Attribute name="stuff" type="Container"&gt; &lt;!-- #2 --&gt;
        &lt;Attribute name="inner_stuff" type="String"&gt; &lt;!-- #3 --&gt;
            &lt;value&gt;Inner stuff&lt;/value&gt;
        &lt;/Attribute&gt;
    &lt;/Attribute&gt;

    &lt;Attribute name="table" type="Alias"&gt;
        &lt;value&gt;testdata:stuff&lt;/value&gt;              &lt;!-- table's value is #2, the whole container --&gt;
    &lt;/Attribute&gt;

    &lt;Attribute name="cruising" type="Alias"&gt;
         &lt;value&gt;testdata:stuff:inner_stuff&lt;/value&gt;  &lt;!-- cruising has the type and value of #3 --&gt;
    &lt;/Attribute&gt;
&lt;/Dataset&gt;
&lt;/pre&gt;

The DODS Test server is a great source of DDX objects which make excellent examples.&lt;br&gt;
Look at the first link on Potter's the DTS: http://test.opendap.org:8080/dods/dts/

Lets try to keep examples to one point to make them easier to use.

I'll add more examples later, but this is a complex topic and I'd like to add other topics before 'finishing' this one.

Nathan poses some questions: How does this "source" syntax refer to a variable's attribute table? How does it refer to a variable? ndp

James Gallagher - 17 Sep 2003 

---- 

I don't really think we need this syntax (both the .'s and the :'s) I think we should have Variable aliases and Attribute aliases. The former can point to variables, the latter can point to Attributes. Basically the idea is that variables don't become Attributes (meta-data) and vice versa. This maintains the long standing separation of data and meta-data in our architecture. A potential syntax might be:

&lt;pre&gt;
&lt;Dataset name="testdata"&gt;
    &lt;Attribute name="stuff" type="String"&gt; &lt;!-- #1 --&gt;
        &lt;value&gt;Stuff about this stuff&lt;/value&gt;
        &lt;value&gt;Silly&lt;/value&gt;
    &lt;/Attribute&gt;
    &lt;Attribute name="cruise" type="alias" source=&gt;  &lt;!-- This is an "Attribute Alias" which may only reference another Attribute (meta-data) --&gt;
        &lt;value&gt;testdata:stuff&lt;/value&gt;       &lt;!-- cruise has the type and value of #1 --&gt;
    &lt;/Attribute&gt;

    &lt;Float32 name="avar"/&gt; &lt;!-- #2 --&gt;
    &lt;Float32 name="bvar"/&gt;
    &lt;Alias   name="cvar" source="testdata.avar"/&gt; &lt;!-- This is a Variable Alias" which may only reference another Variable (data) --&gt;
                                                  &lt;!-- cruise has the type and value of #2 --&gt;
&lt;/Dataset&gt;
&lt;/pre&gt;


Also, in the spec document I noticed that the Alias element had empty content. Maybe we should think about allowing Aliases (at least variable aliases) to contain Attributes...  Nathan Potter 9/19/03, 9/22/03

-----

On further reflection I think that we need to make some very important decisions about [[OPeNDAP MetaData Issues]] and the DAP before we can really get anywhere with this Alias discussion. Nathan Potter - 22 Sep 2003

----

The reason I've been waiting for aliases is to allow sharing of objects, in particular Dimensions, so that OpenDAP can correctly represent netcdf semantics. I'm starting to think maybe aliases are just a workaround, and with a new DAP spec, perhaps this is the time to explicitly add a Dimension object to the DAP data model.

BTW, we are looking at a new NetCDF data model that allows both global, named Dimensions (like we have now) and anonymous Dimensions scoped by their containing Variable, as OpenDAP has now. John Caron 03 Oct 2003</text>
      <sha1>pnjdg2tet5m11i61zqsn7lrzfbxjz7u</sha1>
    </revision>
  </page>
</mediawiki>
