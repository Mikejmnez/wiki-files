<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="en">
  <siteinfo>
    <sitename>OPeNDAP Documentation</sitename>
    <dbname>wikidb</dbname>
    <base>https://docs.opendap.org/index.php/Home</base>
    <generator>MediaWiki 1.38.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OPeNDAP Documentation</namespace>
      <namespace key="5" case="first-letter">OPeNDAP Documentation talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>WCS-UC1.0</title>
    <ns>0</ns>
    <id>365</id>
    <revision>
      <id>2702</id>
      <parentid>2679</parentid>
      <timestamp>2009-01-08T23:30:03Z</timestamp>
      <contributor>
        <username>Ndp</username>
        <id>2</id>
      </contributor>
      <comment>/* Butte Meeting Notes */</comment>
      <origin>2702</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6306" sha1="say02i8whu3uiujdlachdifxdeza523" xml:space="preserve">'''Point Of Contact:''' Mr. Patrick West

== Description ==
WCS GetCoverage request with a pre-built response

== Goal ==
The goal of this use case is to provide an end-to-end request/response to a GetCoverage request. It is intended to get the OLFS and BES involved in the WCS system, with the BES providing the response to this request.

== Summary == 

The primary actor, a person sitting at a computer, enters a pre-defined URL into their browser for a GetCoverage request and receives a Coverages document that contains a Coverage element that has a Reference element that links to a target NetCDF-CF response to be saved to their local disk.

We are attempting to coordinate communication between the OLFS and the BES in this WCS system, with a request coming in to the OLFS from the users browser, the OLFS formulating the request to the BES, and the BES responding to that request with a Coverages document containing a Reference element with the the link to the target NetCDF-CF file.

The request and the response will be pre-defined. In other words, the user won’t be browsing around the catalogues or making GetCapabilities or DescribeCoverage calls and the BES will have a pre-built response, which is a a Coverages document (file)  containing a Reference element with the the link to the target NetCDF-CF file.

== Actors ==
# Primary actor – user sitting at browser
# Secondary actor – OLFS – receives the request from the browser
# Secondary actor – BES – receives request from the OLFS and responds to the request
# Secondary actor – pre-built Coverages document saved as a file.
# Secondary actor – pre-built target NetCDF-CF file

== Preconditions ==
# Using the WCS 1.1.2 specification
# The request URL is a known request, provided for this use case
# The request parameters are in KVP format
# The request parameters version, request type and Id are already known
# The domain subset is in WGS84 BB, Circumscribe N.J. on grid vertices
# The temporal subset is optional and will be left out
# The range subset is optional and will be left out
# The target response file format will be NetCDF-CF
# The response from Hyrax will be a Coverages document containing a Coverage with a Reference element containing a link to the pre-built NetCDF file.

== Triggers ==

The user enters the provided URL representing the GetCoverage request into the browser

== Basic Flow ==
# OLFS receives the request
# OLFS parses the KVP parameters from the request URL including the version, request type, and id
# OLFS sets the domain subset (bb)
# OLFS sets the temporal subset (optional ???)
# OLFS sets the range subset (optional ???)
# OLFS sends the request to the BES as an XML document
# The BES parses the XML document representing the GetCoverage request
# The BES matches the coverage id (and other input)
# The BES returns a pre-built Coverages document that a Coverage element with a Reference containing a link to the pre-built response file, which is in NetCDF-CF format
# The OLFS returns the Coverages document to the user
# The user receives the response, and locates the Coverage containing the Hyrax URL to the target response file. The user takes that URL and enters it into their browser.
# The OLFS sends the request to the BES to stream the target response file back to the user. This functionality already exists (get stream for definition).

== Alternate Flow(s) ==

=== Error Flow (OLFS) ===
# OLFS receives the request
# OLFS attempts to parse the KVP parameters from the request.
# The parsing encounters a bad request (based on the 1.1.2 specification), or …
# The OLFS fails to connect to, or the connection drops to, the BES in Basic Flow step 6, or …
# The OLFS fails to connect to, or the connection drops to, the BES in Basic Flow step 12 …
# OLFS builds a WcsException and returns it to the user.

=== Error Flow (BES) ===
# See Basic Flow steps 1-7
# The BES fails to match the coverage id or some other input (Unsupported operations, CRS mismatch, etc.), or …
# The BES fails to access the pre-built coverage response document, or …
# In Basic Flow step 9, the BES fails to access the file containing the pre-built Coverages document.
# The BES builds a WcsException element and returns it to the user via the OLFS.

== Post Conditions ==
None.

== Activity Diagram ==
[[Image:WCS-UC1.0-ActivityDiagram.png|600px|Activity Diagram]]

== Notes ==

'''Question:''' 
: Will the BES be streaming the response file back to the OLFS, and then on to the user? Or will the BES return a URL to the response file that the user will then click on to download?
:'''Answer:''' The BES will return a link to the target file, not stream the file back. The user will then be able to click on this link and save it to their local disk.

== Resources ==

=== Data ===
{| cellspacing="0" border="1"
|Data
|Type
|Characteristics
|Description
|Owner
|Source System
|-
|HF Radar Data
|Remote netCDF-CF
|One Time Slice
|Contains one time slice.
|Dan Holloway
|dev1.opendap.org
|}

=== Application Services ===
{| cellspacing="0" border="1"
|Application
|Owner
|Description
|Source System
|-
|OLFS
|OPeNDAP
|OPeNDAP Hyrax front end service – receives request from the user’s browser
|dev1.opendap.org
|-
|BES
|OPeNDAP
|OPeNDAP Hyrax back-end server – receives request from OLFS and responds with link to target NetCDF-CF file
|dev1.opendap.org
|}

=== Other Resources ===
{| cellspacing="0" border="1"
|Resource
|Owner
|Description
|Availability
|Source System
|-
|''(sensor name)''
|''Organization that owns/ manages resource''
|''Short description of the resource''
|''How often the resource is available''
|''Name of system which provides resource''
|}


== Butte Meeting Notes ==
Use Case 1 - GetCoverage

Precondition
* Version, Request Type, Id already known
* KVP request to OLFS
* Domain Subset
* BB (WGS84 BB) Circumscribe N.J. on grid verteces
* Temporal is optional and will be left out
* Range Subset: optional
* Format: NetCDF-CF
Trigger
* Request from user
Sequence of Events
* Request to OLFS/Handler
* KVP parsing
** Request Type, Version, Id
* Set Domain Subset (bb)
* Set Temporal Subset
* Set Range Subset
* Generate coverage response
** Match id and other stuff
** ask BES for the response
** BES returns pre-built response
[[Category:WCS]]</text>
      <sha1>say02i8whu3uiujdlachdifxdeza523</sha1>
    </revision>
  </page>
</mediawiki>
