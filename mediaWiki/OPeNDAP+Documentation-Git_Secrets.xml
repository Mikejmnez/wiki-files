<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="en">
  <siteinfo>
    <sitename>OPeNDAP Documentation</sitename>
    <dbname>wikidb</dbname>
    <base>https://docs.opendap.org/index.php/Home</base>
    <generator>MediaWiki 1.38.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OPeNDAP Documentation</namespace>
      <namespace key="5" case="first-letter">OPeNDAP Documentation talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Git Secrets</title>
    <ns>0</ns>
    <id>1021</id>
    <revision>
      <id>12829</id>
      <parentid>12828</parentid>
      <timestamp>2020-01-24T04:28:09Z</timestamp>
      <contributor>
        <username>Jimg</username>
        <id>3</id>
      </contributor>
      <minor/>
      <comment>/* Apply to Existing Repos */</comment>
      <origin>12829</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3796" sha1="hmqslr289b4uwhmjqy861nmys7fzak8" xml:space="preserve">== Installation ==
Installation instructions for various platforms can be found at [https://github.com/awslabs/git-secrets#installing-git-secrets Installing git-secrets].

 &gt; Checking that git-secrets is installed
 &gt;&gt; Installing git-secrets

You can check that git-secrets has been successfully installed by running:

 $ git secrets help
 usage: git secrets --scan [-r|--recursive] [--cached] [--no-index] [--untracked] [&lt;files&gt;...]
   or: git secrets --scan-history
   or: git secrets --install [-f|--force] [&lt;target-directory&gt;]
   or: git secrets --list [--global]
   or: git secrets --add [-a|--allowed] [-l|--literal] [--global] &lt;pattern&gt;
   or: git secrets --add-provider [--global] &lt;command&gt; [arguments...]
   or: git secrets --register-aws [--global]
   or: git secrets --aws-provider [&lt;credentials-file&gt;]
 ...snip...

Installing git-secrets DOES NOT enable it for any existing repositories! Once you have git-secrets installed, you MUST follow the directions under Configuration and Apply to Existing Repos, below.

== Configuration ==
Once git-secrets is installed, it must still be configured to look for AWS access keys and to apply to any new git repos you create or clone. Run the following commands (from Advanced Configuration):

 $ git secrets --register-aws --global
 $ git secrets --install ~/.git-templates/git-secrets
 $ git config --global init.templateDir ~/.git-templates/git-secrets

Once you've done this, git-secrets and the AWS access key patterns will automatically be added to any new git repo you create or clone on this workstation.

The git-secrets global configuration does not apply retroactively to any git repos you already have on the system; to add to these repos, see the following section ("Apply to Existing Repos")

== Apply to Existing Repos ==
If you already have git repositories on your workstation, you will need to apply git-secrets to these as well. In each git repo that you have cloned locally, run the following commands:

 $ git secrets --install
 $ git secrets --register-aws

Adding git-secrets to each git repo manually can be time consuming if you have a large number of repositories. This script will scan your home directory recursively for any git repositories and automatically apply git-secrets to all of them: git-secrets-apply.sh, shown below:

&lt;pre&gt;
#!/bin/bash

echo "&gt; Applying git-secrets to existing repos (under $HOME)"
echo "&gt; If you have alot of data, this may take a while."
find $HOME -type d -name .git | while read git_path; do
	repo_folder=$(dirname "$git_path")
	echo "&gt;&gt; Applying git-secrets to $repo_folder"

	cd "$repo_folder"

	if [ -e ".git/hooks/commit-msg" ]; then
		echo "&gt;&gt;&gt; $repo_folder already has commit-msg hook installed"
	else
		echo "&gt;&gt;&gt; Installing git-secrets"
		git secrets --install
	fi

	echo "&gt;&gt;&gt; Registering AWS patterns"
	git secrets --register-aws
done
&lt;/pre&gt;

 $ bash git-secrets-apply.sh
 &gt; Applying git-secrets to existing repos (under /Users/username)
 &gt; If you have alot of data, this may take a while.
 &gt;&gt; Applying git-secrets to /Users/username/repo1
 &gt;&gt;&gt; Registering AWS patterns
 &gt;&gt; Applying git-secrets to /Users/username/repo2
 &gt;&gt;&gt; Registering AWS patterns
 ...snip...

== False Positives ==
The git-secrets tool can sometimes mistake certain strings in your code or documentation as access keys or other sensitive information; for example, it may flag an example key in a "How To" document as an actual key, and refuse to allow the commit. When this occurs, you can use the following commands to ignore a particular string/pattern:

 $ git secrets --add --allowed AKIAAFAKEKEY12345678
 $ git secrets --add --allowed fake12345678example12345678fake123456789

BE VERY CAREFUL when adding permitted patterns to git-secrets! Don't add anything that you're not completely sure is benign.</text>
      <sha1>hmqslr289b4uwhmjqy861nmys7fzak8</sha1>
    </revision>
  </page>
</mediawiki>
