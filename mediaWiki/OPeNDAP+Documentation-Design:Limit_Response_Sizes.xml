<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="en">
  <siteinfo>
    <sitename>OPeNDAP Documentation</sitename>
    <dbname>wikidb</dbname>
    <base>https://docs.opendap.org/index.php/Home</base>
    <generator>MediaWiki 1.38.4</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">OPeNDAP Documentation</namespace>
      <namespace key="5" case="first-letter">OPeNDAP Documentation talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Design: Limit Response Sizes</title>
    <ns>0</ns>
    <id>661</id>
    <revision>
      <id>6510</id>
      <parentid>6495</parentid>
      <timestamp>2011-06-10T17:38:51Z</timestamp>
      <contributor>
        <username>Jimg</username>
        <id>3</id>
      </contributor>
      <comment>/* OLFS and BES communication */</comment>
      <origin>6510</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1941" sha1="ag0hfodvjyvef8c34f8387qnp102535" xml:space="preserve">Limiting the response sizes for different classes of users will need to be a configuration parameter. This will be set in the OLFS. Users will initially be divided into two groups: authenticated and unauthenticated. Authenticated users will have unlimited access capability while unauthenticated users will only be allowed to transfer up to ''N'' bytes of data.

=== OLFS and BES communication ===

Use a SetContext element in the GetData request. The name of the context will be ''response_size_limit''. The BES will not know how the value will be determined; that will be controlled by the OLFS in its configuration since that's where the log in information is kept.

=== libdap implementation ===

In the class DDS add ''set_'' and ''get_response_limit()'' methods. The ''set_response_limit()'' method will be called by the BES in the ''void BESDataResponseHandler::execute( BESDataHandlerInterface &amp;dhi )'' or equivalent method.

In the ''libdap:ResponseBuilder'' class in the ''send_data()'' methods check this value against the computed/estimated response size.

In DDS implement a ''get_request_size()'' method. When called, evaluates the DDS and return the number of bytes if a response were to be requested with the given constraint (which may be null). Use this method in the ''ResponseBuilder::send_data()'' methods. To implement this, use the BaseType::width() method for scalars and vectors (Arrays), Structures and Grids. For Sequences there really is no way to tell in advance, except that the ''width()'' method does provide the size of the row and a 'row constraint' can be used. In this case, if the request is issues without a row constraint, then return an error including information about the row constraint.

Initial implementation: skip testing for Sequences since they are rare.

=== If a response is not allowed ===

Return an Error. ''ResponseBuilder::send_data()'' can throw an exception just as for other errors.</text>
      <sha1>ag0hfodvjyvef8c34f8387qnp102535</sha1>
    </revision>
  </page>
</mediawiki>
